call plug#begin('~/.vimplug')

Plug 'kien/ctrlp.vim'
Plug 'ap/vim-buftabline'
Plug 'vim-scripts/vim-auto-save'

call plug#end()


set hidden
set showcmd
set hlsearch
set wildmenu
set smartcase
set ignorecase
set nocompatible
filetype indent plugin on
set backspace=indent,eol,start
set autoindent
set nostartofline
set ruler
set scrolloff=5
set laststatus=2
set confirm
set visualbell
set t_vb=
"set cmdheight=2
"set relativenumber
set notimeout ttimeout ttimeoutlen=200
set splitbelow
set splitright


syntax on
set number
set nowrap

""" TABBING
set expandtab
set tabstop=2
set shiftwidth=2

""" LINE WIDTH
set colorcolumn=0
match ErrorMsg '\%>120v.\+'

""" AUTOSAVE
:au FocusLost * silent! wa

""" LAST POSITION AFTER REOPENNING
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe
  "normal! g'\"" | endif
endif

" Save current view settings on a per-window, per-buffer basis.
function! AutoSaveWinView()
    if !exists("w:SavedBufView")
        let w:SavedBufView = {}
    endif
    let w:SavedBufView[bufnr("%")] = winsaveview()
endfunction

" Restore current view settings.
function! AutoRestoreWinView()
    let buf = bufnr("%")
    if exists("w:SavedBufView") && has_key(w:SavedBufView, buf)
        let v = winsaveview()
        let atStartOfFile = v.lnum == 1 && v.col == 0
        if atStartOfFile && !&diff
            call winrestview(w:SavedBufView[buf])
        endif
        unlet w:SavedBufView[buf]
    endif
endfunction

" When switching buffers, preserve window view.
if v:version >= 700
    autocmd BufLeave * call AutoSaveWinView()
    autocmd BufEnter * call AutoRestoreWinView()
endif

let g:auto_save = 1

filetype on
set nocompatible

set hidden
nnoremap <C-E> :e.<CR>
nnoremap <C-N> :bnext<CR>
nnoremap <C-P> :bprev<CR>
nnoremap <C-W> :bw<CR>

syntax on
colorscheme basic-light

set runtimepath^=~/.vim/plugin/ctrlp
let g:ctrlp_working_path_mode = 'cra'
let g:ctrlp_map = '<c-o>'
let g:ctrlp_cmd = 'CtrlP'

